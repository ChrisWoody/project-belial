@page "/"
@using Belial.Common
@inject HttpClient httpClient

<h1>Project Belial</h1>

@if (!IsSetup)
{
    <p>Specify the full function url to query for the user's books</p>

    <input type="text" bind="@GetBooksUrlWithQuery" />
    <button onclick="@Setup">Submit</button>
}
else
{
    <p>You've specified the url: <a href="@GetBooksUrlWithQuery">@GetBooksUrlWithQuery</a></p>

    if (BooksForUser?.Books == null)
    {
        <p>Getting books...</p>
    }
    else
    {
        <button onclick="@GetBooksForUser">Refresh</button>
        <p>@BooksForUser.Books.Length books found!</p>

        <div class="album py-5 bg-light">
            <div class="container-fluid">

                <div class="row">

                    @foreach (var book in BooksForUser.Books)
                    {

                        <div class="col-auto">
                            <div class="card mb-4">
                                <img src="@book.FullImageUrl" alt="Book image" width="200" height="300">
                                <div class="card-body">
                                    <p class="card-text">@book.Title<br/>@book.Isbn</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-sm btn-outline-secondary">Read</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>

            </div>
        </div>
    }
}

<p>@something</p>

@functions
{
    private string GetBooksUrlWithQuery = "http://127.0.0.1:7071/api/GetBooksForUser/63cdbddd-ce8c-411d-ba1e-0174fa19c05c";
    private bool IsSetup;
    private BooksForUser BooksForUser;
    private string something;

    private async Task Setup()
    {
        IsSetup = true;

        await GetBooksForUser();
    }

    private async Task GetBooksForUser()
    {
        BooksForUser = await httpClient.GetJsonAsync<BooksForUser>(GetBooksUrlWithQuery);
    }
}
